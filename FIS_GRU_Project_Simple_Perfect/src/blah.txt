#include <stdio.h>#include <stdlib.h>#include "stwFIS.h"#include "stwFIS_terminate.h"#include "gru.h"#include "weights.h"#include "utils.h"#define MOTION_THRESHOLD 0.50#define SEQ_LENGTH 25void main_stwFIS(void);int main() {    FILE *file = fopen("/home/naren/FIS-20250303T182335Z-001/FIS/FIS_GRU_Project/input_data.txt", "r");    if (!file) {        printf("Error: Cannot open input_data.txt\n");        return 1;    }    float input_sequence[SEQ_LENGTH][INPUT_SIZE];    for (int i = 0; i < SEQ_LENGTH; i++) {        if (fscanf(file, "%f %f %f", &input_sequence[i][0], &input_sequence[i][1], &input_sequence[i][2]) != 3) {            printf("Error reading input file at row %d\n", i);            fclose(file);            return 1;        }    }    fclose(file);    printf("\n--- Running FIS Inference ---\n");    main_stwFIS();    // Use the last timestep for FIS    double hip = input_sequence[SEQ_LENGTH - 1][1];    double hcomVel = input_sequence[SEQ_LENGTH - 1][0];    double knee = input_sequence[SEQ_LENGTH - 1][2];    double onset = stwFIS(hip, hcomVel, knee);    printf("FIS Output (Onset Value): %.2f\n", onset);    if (onset > MOTION_THRESHOLD) {        printf("Motion detected (%.2f > %.2f), triggering GRU...\n", onset, MOTION_THRESHOLD);        if (load_weights() != 0) {            printf("Failed to load GRU weights. Exiting...\n");            return 1;        }        float output_sequence[5][OUTPUT_SIZE];        // Step 7: Run GRU Inference        encoder_decoder_gru(input_sequence, SEQ_LENGTH, 5, output_sequence);        // Step 8: Denormalize GRU Predictions        float min_vals[INPUT_SIZE + OUTPUT_SIZE], max_vals[INPUT_SIZE + OUTPUT_SIZE];        compute_min_max(input_sequence, SEQ_LENGTH, min_vals, max_vals);        denormalize(output_sequence, 5, min_vals, max_vals);        // Step 9: Display predictions after denormalization        printf("\n--- GRU Prediction for Next 5 Time Steps (Denormalized) ---\n");        for (int t = 0; t < 5; t++) {            printf("t+%d: ", t + 1);            for (int j = 0; j < OUTPUT_SIZE; j++) {                printf("%f ", output_sequence[t][j]);            }            printf("\n");        }    } else {        printf("No significant motion detected. GRU inference skipped.\n");    }    // Step 10: Clean Up    stwFIS_terminate();    return 0;}void main_stwFIS(void) {    double hip_tmp = 50.0, hcomVel_tmp = 1.5, knee_tmp = 30.0;    printf("DEBUG: Initializing FIS with test input (50.0, 1.5, 30.0)...\n");    double debug_value = stwFIS(hip_tmp, hcomVel_tmp, knee_tmp);    printf("DEBUG: stwFIS output for test input: %.2f\n", debug_value);}